# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
name: Build and deploy Node.js app to Azure Web App - myportfolioonazure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm' # Enable npm caching for faster installations

      - name: npm install and build
        run: |
          npm clean-install # Use clean-install for reproducible builds
          npm run build --if-present
        env:
          CI: true # Ensures CI-specific behavior

      # Only run tests if test script exists
      - name: Run tests
        run: npm test
        if: hashFiles('package.json') != '' && contains(toJson(fromJson(readFile('package.json'))), '"test"')
        continue-on-error: true

      # Create deployment package with only necessary files
      - name: Create deployment package
        run: |
          mkdir deployment
          cp -r build/* deployment/ 2>/dev/null || :
          cp -r dist/* deployment/ 2>/dev/null || :
          cp -r public/* deployment/ 2>/dev/null || :
          cp package*.json deployment/
          cd deployment
          zip -r ../release.zip ./*

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: |
          unzip release.zip -d .
          rm release.zip

      # Add delay to prevent deployment conflicts
      - name: Wait for any in-progress deployments
        run: sleep 30
        
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_62C6BEEA55C640C7AB2ED7B8A56ABB5F }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_75D05571F9ED46788F5CD654E4D11F09 }}
          
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_B508B69117204150977A00A2792E3C01 }}

      # Stop the web app before deployment
      - name: Stop Azure WebApp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp stop --name myportfolioonazure --resource-group $(az webapp show --name myportfolioonazure --query resourceGroup --output tsv)

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'myportfolioonazure'
          slot-name: 'Production'
          package: .
          clean: true # Enable clean deployment
          restart: true # Restart after deployment

      # Start the web app after deployment
      - name: Start Azure WebApp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp start --name myportfolioonazure --resource-group $(az webapp show --name myportfolioonazure --query resourceGroup --output tsv)
