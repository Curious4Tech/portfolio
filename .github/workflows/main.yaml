name: Portfolio CI/CD

permissions:
  contents: read
  issues: write
  actions: read

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  AZURE_WEBAPP_NAME: 'curios4tech-portfolio'  # Updated to match Azure portal name
  AZURE_RESOURCE_GROUP: 'curious4tech-portfolio-rg'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        
      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Build application
        run: npm run build
        env:
          CI: true
          NEXT_PUBLIC_SITE_URL: https://curios4tech-portfolio-fsgyfkfuf6cbb3cg.canadacentral-01.azurewebsites.net

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Add step to verify web app exists and show details
      - name: Verify Web App
        run: |
          echo "Checking Web App details..."
          az webapp show --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} || echo "Web App not found"

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: .

      - name: Configure Web App
        if: success()
        run: |
          az webapp config set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --linux-fx-version "NODE|20-lts"

          az webapp config appsettings set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --settings \
            WEBSITE_RUN_FROM_PACKAGE=0 \
            SCM_DO_BUILD_DURING_DEPLOYMENT=true \
            NEXT_PUBLIC_SITE_URL=https://curios4tech-portfolio-fsgyfkfuf6cbb3cg.canadacentral-01.azurewebsites.net

      - name: Azure Logout
        run: |
          az logout
        if: always()

      - name: Update deployment status
        if: always()
        run: |
          echo "Deployment Status: ${{ job.status }}"
          echo "Completed at: $(date -u)"
          echo "Workflow run: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `ðŸš¨ Deployment failed - ${new Date().toISOString()}`,
                body: [
                  `## Deployment Failure Report`,
                  `- **Workflow:** ${process.env.GITHUB_WORKFLOW}`,
                  `- **Run:** [View Details](${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${process.env.GITHUB_RUN_ID})`,
                  `- **Triggered by:** ${process.env.GITHUB_ACTOR}`,
                  `- **Timestamp:** ${new Date().toISOString()}`,
                  '',
                  '### Next Steps:',
                  '1. Check the workflow logs for detailed error messages',
                  '2. Verify Azure credentials and configurations',
                  '3. Ensure all environment variables are properly set',
                ].join('\n'),
                labels: ['deployment-failed']
              });
            } catch (error) {
              console.log('Failed to create issue:', error);
              core.warning('Could not create failure notification issue');
            }
